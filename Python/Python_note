Python是面向对象的解释型计算机程序设计语言

字面量：代码中，被写下来的固定的值，称为字面量(整数，浮点数，字符串)

常见的六种数据类型：数字，字符串，列表，元组，集合，字典

注释：单行注释(#  )，多行注释("""  """)

变量：变量 = 值

数据类型：string,int,float等，使用type(内容)查看，查看的是变量存储的数据的类型

数据类型的转换：int(x),float(x),str(x)等(浮点数转换为整数是去掉小数点后面的)

标识符：变量的名字，方法的名字，类的名字等等(大小写敏感)
命名规则：标识符中只允许出现英文，中文，数字，下划线(_)(不能用数字作为开头，不能使用关键字，关键字大小写敏感)
变量：全小写，下划线命名，见名思意

运算符：加+，减-，乘*，除/，取整数//，取余%，指数**，赋值=
赋值运算符：运算符=(eg:+=)

字符串格式化：print('电话%s，地址%s'%(a,b)) %s占位符， %m.n精度控制
或者print(f'地址：{a}')

获取键盘输入：input()

判断：布尔类型(True,False)，0为假，其它都为真
判断语句：(判断语句可以嵌套)
	if 条件1：
		条件1成立做的
	elif 条件2：
		条件2成立做的
	else：
		不满足条件1，2时做的

while循环:(满足条件时执行，不满足时结束循环)
	while 条件：
		条件满足执行的语句

for循环：(对内容进行逐个处理)
	for 零时变量 in 待处理的变量集：
		循环满足条件时执行的代码

range语句：(可以当作for循环的待处理数据集)
range(num):获取一个从0开始，到num结束的数字数列，不包含num本身
range(num1,num2):获取一个从num1开始，到num2结束的数字数列，不包含num2本身
range(num1,num2,step):获取一个从num1开始，到num2结束的数字数列，步长为step不包含num2本身

break和continue：
break：跳出循环，如果在嵌套循环内，只结束所在的循环
continue：跳出本次循环

函数：是组织好的，可以重复使用，用来实现特定功能的代码段
函数中的变量：局部变量和全局变量
局部变量：一般只在当前函数内部使用的变量，出了函数体就无法使用，称为局部变量
全局变量：函数外部定义的变量
*想在函数内部修改全局变量，global 变量名，声明变量为全局变量
语法：
	def 函数名(参数):
		"""
		说明文档用多行注释来表示
		"""
		函数体
		return 返回值   # 当有多返回值时，使用的是(return 1，2) 这种的，不能写多个return，只会识别第一个return
*:先定义后调用，参数和返回值可以省略，返回值是None，可以等同于False


数据容器：一种可以容纳多份数据的数据类型，容纳的每一份数据称之为一个元素，每一个元素可以是任意类型的数据，比如字符串，数字，布尔等。
python中有哪些数据容器：list(列表)，tuple(元组)，str(字符串)，set(集合)，dict(字典)

列表：有序，可修改，可重复，多类型
定义列表：变量名 = [元素] eg：list = [a，1,'你好'，true]
语法：list.index('你好')  # 返回2，返回的是元素的索引，如果被查找的元素不存在会报错
	list[0] = b  # 将a改为b，根据索引值修改元素值
	list.insert(1,111)   # 插入一个元素，在索引为1的位置，后面的元素往后移
	list.append('hello world')   # 追加，将元素加在列表最后面，一次只能一个内容
	list.extend([1,2,3])   # 将一个容器的内容追加到最后，是一个容器
	del list[1]   # 删除索引为1的元素
	list.pop(2)   # 移除下标为2的元素
	list.remove('你好')   # 删除你好这个元素
	list.clear()   # 清空列表
	list.count(a)   # 统计元素a在列表中的个数
	len(list)   # 统计列表的元素数量

元组：有序，不可修改，可重复，多类型
定义元组：变量名 = ()  # 定义只有一个元素的元组的时候需要在元素后面加个逗号
语法：tuple.index(元素)   # 查找元素下标
	tuple.count(元素)   # 统计元组中元素的个数
	len(tuple)   # 统计元组的元素个数

字符串：有序，不可修改，可重复，是字符的容器
语法：字符串.index()   # 根据元素找下标
	字符串.split()   # 切分
	字符串.replace(a,b)   # 将a替换成b
	字符串.strip()  # 去除前后空格
	字符串.count()   # 统计字符串中字符的个数
	len(字符串)   # 统计字符串的长度

集合：无序，不支持元素的重复，多类型，可以修改
定义集合：变量名 = {元素1，元素2，元素3}
语法：set.add()   # 添加新元素
	set.remove()   # 移除元素
	set.pop()   # 随机取出一个元素
	set.clear()   # 清空集合
	set1.difference(set2)   # 取两个集合的差集(在set1中去掉set2中有的元素)
	set1.difference_update(set2)   # 消除2个集合的差集，set1被修改，set2不变
	set1.union(set2)   # 合并集合
	len(set)   # 统计集合元素
	只支持for循环

字典：无序，键值相对应，多类型，可以修改，不可重复
定义字典：变量名 = {key1:value1,key2:value2}
语法：dict[key1]   # 获取key1的value1
语法：dict[key4] = 值   # 新增或者修改
	dict.pop(key1)   # 删除元素
	dict.clear()   # 清空元素
	dict.keys()   # 获取字典全部的key
	len(dict)   # 统计元素个数
	只支持for循环

数据容器的切片：
序列是指：内容连续，有序，可以使用下标索引的一类数据容器
语法：序列[起始下标：结束下标：步长] 步长为负数表示反向取
	max()   # 容器内最大值，在字典中比较的是key
	min()   # 最小值
	len()   # 长度
	list()   # 转换为列表
	tuple()   # 转换为元组
	str()   # 转换为字符串
	set()   # 转换为集合
	sorted(序列，[reverse=True])   # 排序，True表示为降序
