数据管理的三个阶段：人工管理、文档管理、数据库管理

数据库根据不同的逻辑模型可以分为三种：层次型，网状型，关系型

DBMS(数据库管理系统)是数据库系统的核心，是管理数据库的软件。DBMS是实现把用户视角下的，抽象的逻辑数据，转换成为计算机中具体的物理数据的处理的软件

NoSQL数据库的特点：
1.灵活的数据类型
2.可伸缩性强
3.自动分片
4.自动复制

关系型数据库的四大特性(ACID)：
1.原子性(A)
2.一致性(C)
3.隔离性(I)
4.持久性(D)

四类非关系型数据库：
1.键值数据库
2.列族数据库
3.文档数据库
4.图形数据库

HDFS的三个组件：NameNode,SecondaryNameNode,DataNode

HBase的系统架构：客户端，ZooKeeper服务器，HMaster主服务器，RegionServer从服务器

ZooKeeper在HBase的基本作用：
1.Master选举
2.系统容错
3.Region元数据管理
4.Region状态管理
5.提供Meta表存储位置

三类过滤器：
1.RowFilter：行键过滤器
2.FamilyFilter：列族与列过滤器
3.ValueFilter：值过滤器

HBase的核心是RegionServer，RegionServer的核心是Region

HBase数据写入流程：
1.客户端访问ZooKeeper，从Meta表得到写入数据对应的Region信息和相应的Region服务器
2.客户端访问相应的Region服务器，把数据分别写入Hlog和MemStore。MemStore数据容量有限，当达到一个阈值后，则把数据写入磁盘文件StoreFile中，在Hlog文件中写入一个标记，表示MemStore缓存中的数据已经被写入到StoreFile中。如果MenStore中的数据丢失，则可以从Hlog上恢复
3.当多个StoreFile文件达到阈值后，会触发Store.compact()将多个StoreFile文件合并为一个大文件

HBase数据读取流程：
1.客户端先访问Zookeeper，从Meta表读取Region信息对应的服务器
2.客户端向对应的Region服务器发送读取数据的请求。Region接受请求后，先从MemStore查找数据，如果没有，再到StoreFile上读取，然后将数据返回给客户端

文档型数据库的存储结构分为四个层次，从小到大依次为：键值对，文档，集合，数据库

MongoDB中索引的类型大致包括：单键索引，复合索引，多键值索引，地理索引，全文索引，散列索引等

MongoDB提供了三种执行聚合的方法：管道聚合，map-reduce和单一目标聚合

MongoDB三种集群部署模式：主从复制(Master-Slaver)，副本集(Replica Set)，分片(Sharding)

MongoDB应用场景：
1.网站实时数据处理，缓存，高伸缩性的场景
2.海量数据的存储，用于对象及json数据的存储

不适用场景：
1.高度事务性的系统，传统的商业智能应用
2.复杂的文档级查询

安装HBase：
1.解压：tar zxvf hbase-1.2.6-bin.tar.gz /usr/local
2.切换目录：cd /usr/local
3.重命名：mv hbase-1.2-6 hbase
修改配置文件：
hbase-env.sh:配置hbase运行的变量，比如JAVA路径，RegionServer节点
export JAVA_HOME=/usr/local/java/jdk1.8.0
export HBASE_MANAGES_ZK=true
hbase-site.xml:添加HBase的相关配置

启动HBase：start-hbase.sh
关闭Hbase：stop-hbase.sh

